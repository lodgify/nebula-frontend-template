version: 2.1

executors:
  nebula-executor:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
  cypress:
    docker:
      - image: cypress/base:10
    working_directory: ~/repo

jobs:
  dependencies:
    executor: nebula-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore cache
          keys:
            - yarn-packages-${CACHE_VERSION}-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-${CACHE_VERSION}-{{ .Branch }}-
            - yarn-packages-v1-

      - run:
          name: Install dependencies
          command: |
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
            yarn install --frozen-lockfile

      - save_cache:
          name: Save Yarn cache
          key: yarn-packages-${CACHE_VERSION}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress

      - persist_to_workspace:
          root: ~/
          paths:
            - repo
            - .ssh/known_hosts
            - .npmrc
            - .cache/Cypress

  lint:
    executor: nebula-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Lint
          command: yarn lint

  test:
    executor: nebula-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Test
          command: yarn test --maxWorkers 2 --ci --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: "test-results/Jest/js-test-results.xml"
      - store_test_results:
          path: test-results

  visual-build:
    executor: nebula-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Building the app for testing
          command: yarn visual:build

      - run:
          name: Checking built files
          command: cd dist && ls

      - persist_to_workspace:
          root: ~/
          paths:
            - repo/dist

  visual:
    executor: cypress
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Verify that Cypress can run
          command: npx cypress verify
      - run:
          name: Verify if there is a built version of the module
          command: ls && cd dist && ls -1 | wc -l | (read count; if [ $count > 1 ]; then echo "Build verified." && exit 0; else echo "There is no build available." && exit 1; fi)
      - run:
          name: Cypress execution
          command: yarn visual run --record false --key ${CYPRESS_TOKEN} --config video=true

  build-types:
    executor: nebula-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Build module types
          command: yarn build:types
      - persist_to_workspace:
          root: ~/
          paths:
            - repo/types

  build:
    executor: nebula-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Build
          command: yarn build

      - run:
          name: Checking built files
          command: cd build && ls

      - persist_to_workspace:
          root: ~/
          paths:
            - repo/build

  semantic-release:
    executor: nebula-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploy
          command: yarn semantic-release

workflows:
  version: 2
  workflow:
    jobs:
      - dependencies:
          context: global
      - lint:
          requires:
            - dependencies
      - test:
          requires:
            - lint
      - build-types:
          requires:
            - lint
      - visual-build:
          requires:
            - lint
      - visual:
          context: global
          requires:
            - visual-build
      - build:
          requires:
            - visual
      - semantic-release:
          context: global
          requires:
            - test
            - build
            - visual-build
